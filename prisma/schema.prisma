generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String   @id @default(cuid())
  phone         String   @unique
  password      String
  dateOfBirth   DateTime
  gender        String
  brands        Brand[]  @relation(name: "UserBrands") // One-to-many relation (User to Brands)
  activeBrandId String?  @map("active_brand_id")
  activeBrand   Brand?   @relation(name: "ActiveBrand", fields: [activeBrandId], references: [id])

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("users")
}

model Brand {
  id          String  @id @default(cuid())
  name        String
  userId      String?
  User        User?   @relation(name: "UserBrands", fields: [userId], references: [id]) // One-to-many relation (User to Brands)
  activeUsers User[]  @relation(name: "ActiveBrand") // Back-reference for activeBrand relation
  apps        App[]

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("brands")
}

model App {
  id          String   @id @default(cuid())
  platform    String
  accessToken String   @map("access_token")
  brandId     String?
  Brand       Brand?   @relation(fields: [brandId], references: [id])
  type        APP_TYPE @default(APP)

  // âœ… Corrected Self-Referencing Relation
  appId     String? @map("app_id") // Parent App ID (Nullable)
  parentApp App?    @relation("ParentChildApps", fields: [appId], references: [id]) // Reference to parent app
  childApps App[]   @relation("ParentChildApps") // Back-reference for child apps

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  @@map("apps")
}

enum APP_TYPE {
  APP
  CHANNEL
}
